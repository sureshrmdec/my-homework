nginx反向代理配置
===============
什么是代理
--------
代理在普通生活中的意义就是本来应该你做的事情，你让别人代你做了，那么那个帮你做的人就是你的代理。而在计算机网络中代理的概念差不多，就是本来要客户端要做的网络访问，现在移交给另外一个机器做，那么那个机器就被称为代理服务器，代理服务器帮你来访问。过程如下：

正常情况：
client ---(send request)---> server

代理情况：
client ---(send request)---> clinet proxy --(send request)---> server
什么又是反向代理
--------------
那什么又是反向代理呢？反向代理可不是说本来代理你事务的人，反过来代理别人。反向代理在计算机网络中是指这么一个过程。一般来说正向代理是客户机找人来代理把自己的请求转发给服务端，但是如果反向代理，找代理的人不再是客户机，而是服务器这边把自己接受的请求转发给背后的其他机器。其主要区别：

- 正向代理中代理的过程是客户端，代理机器是作为一个访问客户的身份的；而在反向代理中代理机器是作为服务身份。
- 正向代理中代理的过程是服务端，服务端对代理的存在无感知；而在反向代理中客户机对代理的存在无感知。

反向代理情况：
clinet --(send request)--> server proxy --(send request)-->other
server

先让我们看看一个示例
-----------------

- 这个示例都做了什么

为什么需要方向代理
---------------
为什么要反向代理？作用服务端的代理，自然就是一太服务器处理不过来了，需要转发、分散请求给其他服务器做。下面罗列些适用场景：

- 负载均衡（例子）
- 一个域名，多个网站。在这里反向代理倒不是为了负责存在，而是为了域名和服务的统一部署。例如一个公司的内部网站需要搭建很多服务——代码管理服、wiki服务、oa……，但是只要一个域名。这时候就可以用反向代理把不同的子域名转发到不同的服务上。下面是一个例子：

当然反向代理的另一大用处就是隐藏后面的实际服务，以此来达到一定的安全性。


仔细讲解每个模块
-------------
- upstream
- service 配置和匹配规则
- location 配置

参考资料
-------
http://nginx.org/cn/docs/http/ngx_http_upstream_module.html
http://tengine.taobao.org/book/chapter_05.html